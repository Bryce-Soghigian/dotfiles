#!/bin/bash

function kubectl_all_namespaces {
  kubectl $@ --all-namespaces
}
alias ka="kubectl_all_namespaces"

function reload_kubeconfigs {
  unset KUBECONFIG
  for f in $(ls $HOME/.kube/config*); do export KUBECONFIG="$KUBECONFIG:$f"; done
}

function azrc {
  resource_group=$1
  vm_name=$2
  shift 2
  command="$@"
  echo "Running [${command}] on ${vm_name} in ${resource_group}"
  az vm run-command invoke -g ${resource_group} -n ${vm_name} --command-id RunShellScript --scripts "${command}" | jq -r '.value[0].message'
}

function vmrc {
  resource_group=$1
  vmss_name=$2
  instance_id=$3
  shift 3
  command="$@"
  echo "Running [${command}] on ${vmss_name} in ${resource_group}"
  az vmss run-command invoke -g "${resource_group}" -n "${vmss_name}" --instance-id "${instance_id}" --command-id RunShellScript -o json --scripts "${command}" | jq -r '.value[].message'
}

function azal {
  accounts=$(az account list -o json) && \
  account=$(echo $accounts | jq -r '.[].name' | fzf) && \
  sub_id=$(echo $accounts | jq -c ".[] | select(.name == \"${account}\")" | jq -r '.id') && \
  az account set -s $sub_id && \
  echo "${account} (${sub_id})"
}

function az_hard_reboot {
  resource_group=${1}
  vm_name=${2}

  [ -z "${resource_group}" ] && echo "az_hard_reboot <resource_group> <vm_name>" && return 1
  [ -z "${vm_name}" ] && echo "az_hard_reboot <resource_group> <vm_name>" && return 1

  echo "Stopping ${vm_name} in ${resource_group}"
  az vm stop -g "${resource_group}" -n "${vm_name}"

  echo "Starting ${vm_name} in ${resource_group}"
  az vm start -g "${resource_group}" -n "${vm_name}"
}

function fkl {
  namespace=$(kubectl get namespace -o json | jq -r '.items[].metadata.name' | fzf) && \
  pod=$(kubectl get po -n ${namespace} -o json | jq -r '.items[].metadata.name' | fzf) && \
  kubectl logs -n "${namespace}" "${pod}"
}

